debug = true

logLevel = "{{ logLevel }}"
defaultEntryPoints = ["http", "https"]

[http.middlewares]
  [http.middlewares.test-retry.retry]
     attempts = 4

[entryPoints]
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]
    #sniStrict = true
    #minVersion = "VersionTLS12"
    #cipherSuites = [
    #  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
    #  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
    #  "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
    #  "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",
    #  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
    #  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
    #  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
    #]

  [entryPoints.http]
  address = ":80"
{% if http_redirect|default(false) %}
    [entryPoints.http.redirect]
    entryPoint = "https"
{% endif %}

[docker]
endpoint = "unix:///var/run/docker.sock"
watch = true
exposedbydefault = false
network = "web"

{% if url.startswith('https') %}
[acme]
email = "{{ email }}"
storage = "/etc/traefik/acme/acme.json"
entryPoint = "https"
onHostRule = true
acmeLogging = true
caServer = "{{ acme }}"
{% if dnsprovider %}
  [acme.dnsChallenge]
  provider = "{{ dnsprovider }}"
  delayBeforeCheck = 0
{% endif %}
  [acme.tlsChallenge]
  [acme.httpChallenge]
  entryPoint = "http"
{% endif %}
{% if dnsprovider %}
[[acme.domains]]
  main = "*.{{ url.split('/')[2] }}"
  sans = ["{{ url.split('/')[2] }}"]
{% endif %}

[frontend]
rule = "Host:{{ url.split('/')[2] }}"
entryPoint = "http"

[api]
dashboard = true
